View(vehicles)
is.data.frame(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
diff_makes <- vehicles[, c("makes")]
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
diff_makes <- vehicles[, c("makes"), ]
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
diff_makes <- vehicles[, c("makes") ,]
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
makes <- vehicles$make
print(makes)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
length(unique(make))
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
length(unique(makes))
# Filter the data set for vehicles manufactured in 1997
cars_1997 <- vehicles[vehicles$year == "1997", ]
print(cars_1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
cars_1997 <- cars_1997[order(cars_1997$hwy)]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
cars_1997 <- cars_1997[order(cars_1997$hwy),]
print(cars_1997)
cars_1997$average = (cars_1997$hwy + cars_1997$cty) / 2
view(cars_1997)
View(cars_1997)
vehicles[vehicles$drive == "2-Wheel Drive"]
vehicles[vehicles$drive == "2-Wheel Drive", ]
vehicles_2_wheel_drive <- vehicles[vehicles$drive == "2-Wheel Drive", ]
vehicles_2_wheel_drive[vehicles$cty > 20]
vehicles_2_wheel_drive[vehicles$cty > 20, ]
install.packages("httr")
library("httr")
base_uri <- "https://api.github.com"
username <- "info201"
# The complete URI
uri <- paste0(base_uri, resource)
# The specific endpoint
resource <- paste0("/users/", username, "/repos")
# The complete URI
uri <- paste0(base_uri, resource)
# The specific endpoint
#resource <- paste0("/users/", username, "/repos")
resource <- "/emojis"
uri
GET(uri)
response <- GET(uri)
#2
body <- content(response, "text")
body
length(body)
is.vector(body)
# Install `jsonlite` package
# Only needs to be done once per machine!
install.packages("jsonlite")
# Load the package (tell R functions are available for use)
library("jsonlite")
# an example string of JSON
json <- '{"first_name":"Ada","job":"Programmer","pets":["rover","fl
# convert from string into R structure
ada <- fromJSON(json) # a list!
response <- GET("https://api.github.com/users/info201/repos")
body <- content(response, "text")
repos <- fromJSON(body) # a data frame!
25
ada <- fromJSON(json)
emojis <- fromJSON(body)
emojis
body_data <- fromJSON(content(response, "text"))
is.data.frame(body_data)
body_data <- fromJSON(content(response, "text"))
is.data.frame(body_data)
str(body_data)
names(body_data)
people<- data.frame(names = c('Spencer', 'Jessica', 'Keagan'))
people<- data.frame(names = c('Spencer', 'Jessica', 'Keagan'))
favorites_df <- data.frame(
food= c('Pizza', 'Pasta', 'salad'),
music = c('Bluegrass', 'Indie', 'Electronic')
)
people$favorites <- favorites_df
print(people)
people$favorites.food
people$favories$food
people$favorites$food
flat <- flatten(people)
flat <- flatten(people)
people <- flatten(people)
library("jsonlite")
people <- flatten(people)
people
View(people)
source("api-key.R")
library(httr)
library(jsonlite)
library(knitr)
library(dplyr)
topic <- "mental-health"
base_uri <- "https://api.propublica.org/congress/v1/"
response <- GET(base_uri, add_headers('X-API-KEY' = api_key))
response <- GET(paste0(base_uri, "bills/search.json?", "query=", topic),
add_headers('X-API-KEY' = api_key))
mh_body <- content(response, "text")
parsed_mh_data <- fromJSON(mh_body)
recent_mh_bills <- data.frame(parsed_mh_data$results, stringsAsFactors = FALSE)
recent_mh_bills <- flatten(recent_mh_bills)
api_key <- "54631729b4a04ae0bc2e16275fef2f6e"
source("api-key.R")
library(httr)
library(jsonlite)
library(knitr)
library(dplyr)
topic <- "mental-health"
base_uri <- "https://api.propublica.org/congress/v1/"
response <- GET(base_uri, add_headers('X-API-KEY' = api_key))
response <- GET(paste0(base_uri, "bills/search.json?", "query=", topic),
add_headers('X-API-KEY' = api_key))
mh_body <- content(response, "text")
parsed_mh_data <- fromJSON(mh_body)
recent_mh_bills <- data.frame(parsed_mh_data$results, stringsAsFactors = FALSE)
recent_mh_bills <- flatten(recent_mh_bills)
api_key <- "O5AYHeaSQTn9asQBO6W0lTXWyEXKpr0jgwjKzcHI"
source("api-key.R")
library(httr)
library(jsonlite)
library(knitr)
library(dplyr)
topic <- "mental-health"
base_uri <- "https://api.propublica.org/congress/v1/"
response <- GET(base_uri, add_headers('X-API-KEY' = api_key))
response <- GET(paste0(base_uri, "bills/search.json?", "query=", topic),
add_headers('X-API-KEY' = api_key))
mh_body <- content(response, "text")
parsed_mh_data <- fromJSON(mh_body)
recent_mh_bills <- data.frame(parsed_mh_data$results, stringsAsFactors = FALSE)
recent_mh_bills <- flatten(recent_mh_bills)
View(recent_mh_bills)
recent_mh_bills <- data.frame(recent_mh_bills$bills)
View(recent_mh_bills)
kable(recent_mh_bills)
letters <- c("a", "b", "c")
numbers <- 1:3
df <- data.frame(letters = letters, numbers = numbers)
kable(df)
recent_mh_bills <- data.frame(parsed_mh_data$results, stringsAsFactors = FALSE)
recent_mh_bills <- data.frame(recent_mh_bills$bills)
View(recent_mh_bills)
legislators_involved <- paste0(
recent_mh_bills$sponsor_name,
",",
recent_mh_bills$sponsor_state,
",",
recent_mh_bills$sponsor_party
)
legislators <- paste0(
recent_mh_bills$sponsor_name,
",",
recent_mh_bills$sponsor_state,
",",
recent_mh_bills$sponsor_party
)
recent_mh_bills["legistors"] = legislators
View(recent_mh_bills)
source("Assignment.R")
recent_mh_bills["legistors"] = legislators
source("api-key.R")
library(httr)
library(jsonlite)
library(knitr)
library(dplyr)
#Part 1: Legislative Data
topic <- "mental-health"
base_uri <- "https://api.propublica.org/congress/v1/"
response <- GET(base_uri, add_headers('X-API-KEY' = api_key))
response <- GET(paste0(base_uri, "bills/search.json?", "query=", topic),
add_headers('X-API-KEY' = api_key))
mh_body <- content(response, "text")
parsed_mh_data <- fromJSON(mh_body)
recent_mh_bills <- data.frame(parsed_mh_data$results, stringsAsFactors = FALSE)
recent_mh_bills <- flatten(recent_mh_bills)
recent_mh_bills <- data.frame(recent_mh_bills$bills)
legislators <- paste0(
recent_mh_bills$sponsor_name,
",",
recent_mh_bills$sponsor_state,
",",
recent_mh_bills$sponsor_party
)
recent_mh_bills["legistors"] = legislators
View(recent_mh_bills)
#Part 1: Legislative Data
topic <- "mental-health"
base_uri <- "https://api.propublica.org/congress/v1/"
response <- GET(base_uri, add_headers('X-API-KEY' = api_key))
response <- GET(paste0(base_uri, "bills/search.json?", "query=", topic),
add_headers('X-API-KEY' = api_key))
mh_body <- content(response, "text")
parsed_mh_data <- fromJSON(mh_body)
recent_mh_bills <- data.frame(parsed_mh_data$results, stringsAsFactors = FALSE)
recent_mh_bills <- flatten(recent_mh_bills)
recent_mh_bills <- data.frame(recent_mh_bills$bills)
legislators <- paste0(
recent_mh_bills$sponsor_name,
",",
recent_mh_bills$sponsor_state,
",",
recent_mh_bills$sponsor_party
)
recent_mh_bills["legistors"] = legislators
more_information <- paste0(
recent_mh_bills$congressdotgov_url,
",",
recent_mh_bills$govtrack_url
)
recent_mh_bills["more information"] = more_information
top_10_mh_bills <- arrange(recent_mh_bills, desc(introduced_date))
top_10_mh_bills <- recent_mh_bills[1:10, ]
top_10_mh_bills <- arrange(recent_mh_bills, desc(introduced_date))
top_10_mh_bills <- recent_mh_bills[1:10, ]
top_10_mh_bills <- arrange(recent_mh_bills, desc(introduced_date))
top_10_mh_bills <- recent_mh_bills[1:10, ]
top_10_mh_bills <- arrange(recent_mh_bills, desc(introduced_date))
top_10_mh_bills <- recent_mh_bills[1:10, ]
top_10_mh_bills <- select(
top_10_mh_bills,
bill_id,
short_title,
legistlators,
latest_major_action,
more_information
)
top_10_mh_bills <- arrange(recent_mh_bills, desc(introduced_date))
top_10_mh_bills <- recent_mh_bills[1:10, ]
top_10_mh_bills <- select(
top_10_mh_bills,
bill_id,
short_title,
legistlators_involved,
latest_major_action,
more_information
)
top_10_mh_bills <- arrange(recent_mh_bills, desc(introduced_date))
top_10_mh_bills <- recent_mh_bills[1:10, ]
top_10_mh_bills <- select(
top_10_mh_bills,
bill_id,
short_title,
legistlators,
latest_major_action,
more_information
)
source("api-key.R")
library(httr)
library(jsonlite)
library(knitr)
library(dplyr)
#Part 1: Legislative Data
topic <- "mental-health"
base_uri <- "https://api.propublica.org/congress/v1/"
response <- GET(base_uri, add_headers('X-API-KEY' = api_key))
response <- GET(paste0(base_uri, "bills/search.json?", "query=", topic),
add_headers('X-API-KEY' = api_key))
mh_body <- content(response, "text")
parsed_mh_data <- fromJSON(mh_body)
recent_mh_bills <- data.frame(parsed_mh_data$results, stringsAsFactors = FALSE)
recent_mh_bills <- flatten(recent_mh_bills)
recent_mh_bills <- data.frame(recent_mh_bills$bills)
legislators <- paste0(
recent_mh_bills$sponsor_name,
",",
recent_mh_bills$sponsor_state,
",",
recent_mh_bills$sponsor_party
)
recent_mh_bills["legislators"] = legislators
more_information <- paste0(
recent_mh_bills$congressdotgov_url,
",",
recent_mh_bills$govtrack_url
)
recent_mh_bills["more information"] = more_information
top_10_mh_bills <- arrange(recent_mh_bills, desc(introduced_date))
top_10_mh_bills <- recent_mh_bills[1:10, ]
top_10_mh_bills <- select(
top_10_mh_bills,
bill_id,
short_title,
legistlators,
latest_major_action,
more_information
)
source("api-key.R")
library(httr)
library(jsonlite)
library(knitr)
library(dplyr)
#Part 1: Legislative Data
topic <- "mental-health"
base_uri <- "https://api.propublica.org/congress/v1/"
response <- GET(base_uri, add_headers('X-API-KEY' = api_key))
response <- GET(paste0(base_uri, "bills/search.json?", "query=", topic),
add_headers('X-API-KEY' = api_key))
mh_body <- content(response, "text")
parsed_mh_data <- fromJSON(mh_body)
recent_mh_bills <- data.frame(parsed_mh_data$results, stringsAsFactors = FALSE)
recent_mh_bills <- flatten(recent_mh_bills)
recent_mh_bills <- data.frame(recent_mh_bills$bills)
legislators <- paste0(
recent_mh_bills$sponsor_name,
",",
recent_mh_bills$sponsor_state,
",",
recent_mh_bills$sponsor_party
)
recent_mh_bills["legislators"] = legislators
more_information <- paste0(
recent_mh_bills$congressdotgov_url,
",",
recent_mh_bills$govtrack_url
)
recent_mh_bills["more information"] = more_information
top_10_mh_bills <- arrange(recent_mh_bills, desc(introduced_date))
top_10_mh_bills <- recent_mh_bills[1:10, ]
top_10_mh_bills <- select(
top_10_mh_bills,
bill_id,
short_title,
legislators,
latest_major_action,
more_information
)
source("api-key.R")
library(httr)
library(jsonlite)
library(knitr)
library(dplyr)
#Part 1: Legislative Data
topic <- "mental-health"
base_uri <- "https://api.propublica.org/congress/v1/"
response <- GET(base_uri, add_headers('X-API-KEY' = api_key))
response <- GET(paste0(base_uri, "bills/search.json?", "query=", topic),
add_headers('X-API-KEY' = api_key))
mh_body <- content(response, "text")
parsed_mh_data <- fromJSON(mh_body)
recent_mh_bills <- data.frame(parsed_mh_data$results, stringsAsFactors = FALSE)
recent_mh_bills <- flatten(recent_mh_bills)
recent_mh_bills <- data.frame(recent_mh_bills$bills)
legislators <- paste0(
recent_mh_bills$sponsor_name,
",",
recent_mh_bills$sponsor_state,
",",
recent_mh_bills$sponsor_party
)
recent_mh_bills["legislators"] = legislators
more_information <- paste0(
recent_mh_bills$congressdotgov_url,
",",
recent_mh_bills$govtrack_url
)
recent_mh_bills["more information"] = more_information
top_10_mh_bills <- arrange(recent_mh_bills, desc(introduced_date))
top_10_mh_bills <- recent_mh_bills[1:10, ]
top_10_mh_bills <- select(
top_10_mh_bills,
bill_id,
short_title,
legislators_involved,
latest_major_action,
more_information
)
source("api-key.R")
library(httr)
library(jsonlite)
library(knitr)
library(dplyr)
#Part 1: Legislative Data
topic <- "mental-health"
base_uri <- "https://api.propublica.org/congress/v1/"
response <- GET(base_uri, add_headers('X-API-KEY' = api_key))
response <- GET(paste0(base_uri, "bills/search.json?", "query=", topic),
add_headers('X-API-KEY' = api_key))
mh_body <- content(response, "text")
parsed_mh_data <- fromJSON(mh_body)
recent_mh_bills <- data.frame(parsed_mh_data$results, stringsAsFactors = FALSE)
recent_mh_bills <- flatten(recent_mh_bills)
recent_mh_bills <- data.frame(recent_mh_bills$bills)
legislators <- paste0(
recent_mh_bills$sponsor_name,
",",
recent_mh_bills$sponsor_state,
",",
recent_mh_bills$sponsor_party
)
recent_mh_bills["legislators"] = legislators
more_information <- paste0(
recent_mh_bills$congressdotgov_url,
",",
recent_mh_bills$govtrack_url
)
recent_mh_bills["more information"] = more_information
top_10_mh_bills <- arrange(recent_mh_bills, desc(introduced_date))
top_10_mh_bills <- recent_mh_bills[1:10, ]
top_10_mh_bills <- select(
top_10_mh_bills,
bill_id,
short_title,
legislators,
latest_major_action,
more_information
)
source("api-key.R")
library(httr)
library(jsonlite)
library(knitr)
library(dplyr)
#Part 1: Legislative Data
topic <- "mental-health"
base_uri <- "https://api.propublica.org/congress/v1/"
response <- GET(base_uri, add_headers('X-API-KEY' = api_key))
response <- GET(paste0(base_uri, "bills/search.json?", "query=", topic),
add_headers('X-API-KEY' = api_key))
mh_body <- content(response, "text")
parsed_mh_data <- fromJSON(mh_body)
recent_mh_bills <- data.frame(parsed_mh_data$results, stringsAsFactors = FALSE)
recent_mh_bills <- flatten(recent_mh_bills)
recent_mh_bills <- data.frame(recent_mh_bills$bills)
legislators <- paste0(
recent_mh_bills$sponsor_name,
",",
recent_mh_bills$sponsor_state,
",",
recent_mh_bills$sponsor_party
)
recent_mh_bills["legislators"] = legislators
more_information <- paste0(
recent_mh_bills$congressdotgov_url,
",",
recent_mh_bills$govtrack_url
)
recent_mh_bills["more information"] = more_information
top_10_mh_bills <- arrange(recent_mh_bills, desc(introduced_date))
top_10_mh_bills <- recent_mh_bills[1:10, ]
top_10_mh_bills <- select(
top_10_mh_bills,
bill_id,
short_title,
legislators_involved,
latest_major_action,
more_information
)
source("api-key.R")
library(httr)
library(jsonlite)
library(knitr)
library(dplyr)
#Part 1: Legislative Data
topic <- "mental-health"
base_uri <- "https://api.propublica.org/congress/v1/"
response <- GET(base_uri, add_headers('X-API-KEY' = api_key))
response <- GET(paste0(base_uri, "bills/search.json?", "query=", topic),
add_headers('X-API-KEY' = api_key))
mh_body <- content(response, "text")
parsed_mh_data <- fromJSON(mh_body)
recent_mh_bills <- data.frame(parsed_mh_data$results, stringsAsFactors = FALSE)
recent_mh_bills <- flatten(recent_mh_bills)
recent_mh_bills <- data.frame(recent_mh_bills$bills)
legislators <- paste0(
recent_mh_bills$sponsor_name,
",",
recent_mh_bills$sponsor_state,
",",
recent_mh_bills$sponsor_party
)
recent_mh_bills["legislators_involved"] = legislators_involved
more_information <- paste0(
recent_mh_bills$congressdotgov_url,
",",
recent_mh_bills$govtrack_url
)
recent_mh_bills["more information"] = more_information
top_10_mh_bills <- arrange(recent_mh_bills, desc(introduced_date))
top_10_mh_bills <- recent_mh_bills[1:10, ]
top_10_mh_bills <- select(
top_10_mh_bills,
bill_id,
short_title,
legislators_involved,
latest_major_action,
more_information
)
install.packages("shiny")
library("shiny")
my_ui <- fluidPage(
h1("Hello Shiny"),
textInput('user_name', label = "What is your name?")
)
runApp('shiny-demo-info 201')
runApp('shiny-demo-info 201')
runApp('shiny-demo-info 201')
